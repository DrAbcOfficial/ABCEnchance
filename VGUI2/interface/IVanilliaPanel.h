#ifndef VGUI_IVanilliaPanel_H_
#define VGUI_IVanilliaPanel_H_

#include <VGUI.h>

class IVanilliaPanel {
public:
	virtual vgui::VPANEL GetVPanel() = 0;//1
	virtual void* Think() = 0;//2
	virtual void* PerformApplySchemeSettings() = 0;//3
	virtual void* PaintTraverse(bool param_1, bool param_2) = 0;//4
	virtual void* Repaint() = 0;//5
	virtual void* IsWithinTraverse(int param_2, bool param_3) = 0;//6
	virtual void* GetInset(int* param_1, int* param_2, int* param_3, int* param_4) = 0;//7
	virtual void* GetClipRect(int* param_1, int* param_2, int* param_3, int* param_4) = 0;//8
	virtual void* OnChildAdded() = 0;//9
	virtual void* OnSizeChanged(int param_2) = 0;//10
	virtual void* InternalFocusChanged() = 0;//11
	virtual void* RequestInfo(class KeyValues* param_1) = 0;//12
	virtual void* RequestFocus(int param_1) = 0;//13
	virtual void* RequestFocusPrev() = 0;//14
	virtual void* RequestFocusNext() = 0;//15
	virtual void* OnMessage(uint param_2) = 0;//16
	virtual void* GetCurrentKeyFocus() = 0;//17
	virtual void* GetTabPosition() = 0;//18
	virtual void* GetName() = 0;//19
	virtual void* GetClassName() = 0;//20
	virtual vgui::HScheme GetScheme() = 0;//21
	virtual void* IsProportional() = 0;//22
	virtual void* IsAutoDeleteSet() = 0;//23
	virtual void* OnDelete() = 0;//24
	virtual void* QueryInterface(class EInterfaceID* param_1) = 0;//25
	virtual void* GetPanel() = 0;//26
	virtual void* GetModuleName() = 0;//27
	virtual void* GetMessageMap() = 0;//28
	virtual ~IVanilliaPanel() = 0;//29
	//not exist in windows
	//virtual ~CBasePanel_1() = 0;//30
	virtual void* SetVisible(bool param_1) = 0;//31
	virtual void* IsVisible() = 0;//32
	virtual void* PostMessage(uint param_1, class KeyValues* param_2, float param_3) = 0;//33
	virtual void* Paint() = 0;//34
	virtual void* GetParent() = 0;//35
	virtual void* GetVParent() = 0;//36
	virtual void* SetParent(class Panel* param_1) = 0;//37
	virtual void* SetParent(uint param_1) = 0;//38
	virtual void* HasParent(uint param_1) = 0;//39
	virtual void* SetAutoDelete(bool param_1) = 0;//40
	virtual void* AddActionSignalTarget(class Panel* param_1) = 0;//41
	virtual void* AddActionSignalTarget(uint param_1) = 0;//42
	virtual void* RemoveActionSignalTarget(class Panel* param_1) = 0;//43
	virtual void* PostActionSignal(class KeyValues* param_1) = 0;//44
	virtual void* RequestInfoFromChild(class KeyValues* param_2) = 0;//45
	virtual void* PostMessageToChild(char* param_1, class KeyValues* param_2) = 0;//46
	virtual void* PostMessage(class Panel* param_1, class KeyValues* param_2, float param_3) = 0;//47
	virtual void* SetInfo() = 0;//48
	virtual void* SetEnabled(bool param_1) = 0;//49
	virtual void* IsEnabled() = 0;//50
	virtual void* IsPopup() = 0;//51
	virtual void* MoveToFront() = 0;//52
	virtual void* SetBgColor(class Color* param_1) = 0;//53
	virtual void* SetFgColor(class Color* param_1) = 0;//54
	virtual class Color GetBgColor() = 0;//55
	virtual class Color GetFgColor() = 0;//56
	virtual void* SetCursor(ulong param_1) = 0;//57
	virtual void* GetCursor() = 0;//58
	virtual void* HasFocus() = 0;//59
	virtual void* InvalidateLayout(bool param_1, bool param_2) = 0;//60
	virtual void* SetTabPosition(int param_1) = 0;//61
	virtual void* SetBorder(class IBorder* param_1) = 0;//62
	virtual void* GetBorder() = 0;//63
	virtual void* SetPaintBorderEnabled(bool param_1) = 0;//64
	virtual void* SetPaintBackgroundEnabled(bool param_1) = 0;//65
	virtual void* SetPaintEnabled(bool param_1) = 0;//66
	virtual void* SetPostChildPaintEnabled(bool param_1) = 0;//67
	virtual void* GetPaintSize(int* param_1, int* param_2) = 0;//68
	virtual void* SetBuildGroup(class BuildGroup* param_1) = 0;//69
	virtual void* IsBuildGroupEnabled() = 0;//70
	virtual void* IsCursorNone() = 0;//71
	virtual void* IsCursorOver() = 0;//72
	virtual void* MarkForDeletion() = 0;//73
	virtual void* IsLayoutInvalid() = 0;//74
	virtual void* HasHotkey() = 0;//75
	virtual void* IsOpaque() = 0;//76
	virtual void* SetScheme(char* param_1) = 0;//77
	virtual void* SetScheme(ulong param_1) = 0;//78
	virtual void* GetSchemeColor(class IScheme* param_2) = 0;//79
	virtual void* GetSchemeColor(class Color* param_2, class IScheme* param_3) = 0;//80
	virtual void* ApplySchemeSettings(class IScheme* param_1) = 0;//81
	virtual void* ApplySettings(class KeyValues* param_1) = 0;//82
	virtual void* GetSettings(class KeyValues* param_1) = 0;//83
	virtual void* GetDescription() = 0;//84
	virtual void* GetUserConfigSettings() = 0;//85
	virtual void* GetUserConfigSettings_1() = 0;//86
	virtual void* HasUserConfigSettings() = 0;//87
	virtual void* Paint_1() = 0;//88
	virtual void* GetUserConfigSettings_2() = 0;//89
	virtual void* OnMouseCaptureLost() = 0;//90
	virtual void* OnSetFocus() = 0;//91
	virtual void* OnSetFocus_1() = 0;//92
	virtual void* OnDelete_1() = 0;//93
	virtual void* Paint_2() = 0;//94
	virtual void* OnCursorMoved(int param_2) = 0;//95
	virtual void* Paint_3() = 0;//96
	virtual void* Paint_4() = 0;//97
	virtual void* OnMousePressed() = 0;//98
	virtual void* OnMousePressed_1() = 0;//99
	virtual void* OnMousePressed_2() = 0;//100
	virtual void* OnMouseWheeled(int param_1) = 0;//101
	virtual void* OnKeyCodePressed(class KeyCode* param_1) = 0;//102
	virtual void* OnKeyCodeTyped(class KeyCode* param_1) = 0;//103
	virtual void* OnKeyTyped(wchar_t param_1) = 0;//104
	virtual void* OnKeyCodeReleased(class KeyCode* param_1) = 0;//105
	virtual void* OnKeyFocusTicked() = 0;//106
	virtual void* OnMouseFocusTicked() = 0;//107
	virtual void* PaintBackground() = 0;//108
	virtual void* Paint_5() = 0;//109
	virtual void* PaintBorder() = 0;//110
	virtual void* PaintBuildOverlay() = 0;//111
	virtual void* Paint_6() = 0;//112
	virtual void* Paint_7() = 0;//113
	virtual void* GetPanelMap() = 0;//114
	virtual void* SetProportional(bool param_1) = 0;//115
	virtual void* SetMouseInputEnabled(bool param_1) = 0;//116
	virtual void* SetKeyBoardInputEnabled(bool param_1) = 0;//117
	virtual void* IsMouseInputEnabled() = 0;//118
	virtual void* IsKeyBoardInputEnabled() = 0;//119
	virtual void* OnRequestFocus(uint param_1, uint param_2) = 0;//120
	virtual void* InternalCursorMoved(int param_1, int param_2) = 0;//121
	virtual void* InternalCursorEntered() = 0;//122
	virtual void* InternalCursorExited() = 0;//123
	virtual void* InternalMousePressed(int param_1) = 0;//124
	virtual void* InternalMouseDoublePressed(int param_1) = 0;//125
	virtual void* InternalMouseReleased(int param_1) = 0;//126
	virtual void* InternalMouseWheeled(int param_1) = 0;//127
	virtual void* InternalKeyCodePressed(int param_1) = 0;//128
	virtual void* InternalKeyCodeTyped(int param_1) = 0;//129
	virtual void* InternalKeyTyped(int param_1) = 0;//130
	virtual void* InternalKeyCodeReleased(int param_1) = 0;//131
	virtual void* InternalKeyFocusTicked() = 0;//132
	virtual void* InternalMouseFocusTicked() = 0;//133
	virtual void* InternalInvalidateLayout() = 0;//134
	virtual void* InternalMove() = 0;//135
};

class IVanilliaEditablePanel : public IVanilliaPanel {
public:
	virtual void LoadControlSettings(const char* resourceName, const char* pathID, KeyValues* pKeyValues) = 0;
};
#endif